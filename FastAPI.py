from fastapi import FastAPI
import uvicorn

Authors = ['Пастернак', 'Фет', 'Ахматова', 'Пушкин', 'Шекспир']

Poems = {


'Пастернак': {'poem': ['Быть знаменитым некрасиво…', 'Февраль', 'Достать чернил и плакать…', 'Нежность'], 'content':

{'Быть знаменитым некрасиво…':
'''Быть знаменитым некрасиво.
Не это подымает ввысь.
Не надо заводить архива,
Над рукописями трястись.

Цель творчества — самоотдача,
А не шумиха, не успех.
Позорно, ничего не знача,
Быть притчей на устах у всех...''',

'Февраль':
'''Февраль. Достать чернил и плакать!
Писать о феврале навзрыд,
Пока грохочущая слякоть
Весною черною горит...''',

'Нежность':
'''Ослепляя блеском,
Вечерело в семь.
С улиц к занавескам
Подступала темь.
Люди — манекены,
Только страсть с тоской
Водит по Вселенной
Шарящей рукой...'''}},


'Фет': {'poem': ['К ней', 'Она', 'Бабочка'], 'content':

{'К ней':
'''Кто постигнет улыбку твою
И лазурных очей выраженье,
Тот поймет и молитву мою
И восторженных уст песнопенье...''',

'Она':
'''Две незабудки, два сапфира —
Ее очей приветный взгляд,
И тайны горнего эфира
В живой лазури их сквозят...''',

'Бабочка':
'''Ты прав. Одним воздушным очертаньем
Я так мила.
Весь бархат мой с его живым миганьем —
Лишь два крыла...'''}},


'Ахматова': {'poem': ['А мы?', 'Реквием', 'Сжала руки под тёмной вуалью…'], 'content':

{'А мы?':
'''А мы?
Не так же ль мы
Сошлись на краткий миг для переклички?''',

'Реквием':
'''Нет, и не под чуждым небосводом,
И не под защитой чуждых крыл, —
Я была тогда с моим народом,
Там, где мой народ, к несчастью, был.''',

'Сжала руки под тёмной вуалью…':
'''Сжала руки под тёмной вуалью…
«Отчего ты сегодня бледна?»
— Оттого, что я терпкой печалью
Напоила его допьяна...'''}},


'Пушкин': {'poem': ['К Чаадаеву', 'Няне', 'Ты и я (Александру I)'], 'content':

{'К Чаадаеву':
'''Любви, надежды, тихой славы
Недолго нежил нас обман,
Исчезли юные забавы,
Как сон, как утренний туман;
Но в нас горит еще желанье,
Под гнетом власти роковой
Нетерпеливою душой
Отчизны внемлем призыванье... ''',

'Няне':
''' Подруга дней моих суровых,
Голубка дряхлая моя!
Одна в глуши лесов сосновых
Давно, давно ты ждешь меня...''',

'Ты и я (Александру I)':
'''Ты богат, я очень беден;
Ты прозаик, я поэт;
Ты румян, как маков цвет,
Я, как смерть, и тощ и бледен.
Не имея ввек забот,
Ты живешь в огромном доме;
Я ж средь горя и хлопот
Провожу дни на соломе.'''}},


'Шекспир': {'poem': ['О внутренней красоте — Сонет 54', 'Моя душа, душа моей любви — Сонет 109', 'Стих о смерти — Сонет 66'], 'content':

{'О внутренней красоте — Сонет 54':
'''Красивое — красивей во сто раз, 
Когда красу венчает благородство. 
Так роза восхитит не только глаз: 
Есть в нежном аромате превосходство. ''',

'Моя душа, душа моей любви — Сонет 109':
'''Меня неверным другом не зови. 
Как мог я изменить иль измениться? 
Моя душа, душа моей любви, 
В твоей груди, как мой залог, хранится. 
Ты — мой приют, дарованный судьбой. ''',

'Стих о смерти — Сонет 66':
'''Смерть призываю я — невмоготу
Мне видеть торжество неправой силы,
Достоинство, что ввергли в нищету, 
И Веру, что обманом подкосили, 
И разодетую до блеска Мразь, 
И Глупость, поучающую Знанье, 
И Непорочность, втоптанную в грязь, 
И Музу в лапах палача-Молчанья, 
И Благость, ставшую служанкой Зла, 
И Честность, что прослыла простотою, 
И Немощь, что над Мощью власть взяла, 
И Зло, взлелеянное Добротою — 
Смерть призывая, умереть не смею: 
Любовь сгублю кончиною своею.'''}}}

app = FastAPI()

try:
    @app.get("/")
    def authors():
        return Authors

    @app.get("/{Author_Name}")
    def shedevri(Author_Name: str):
        return Poems[Author_Name]['poem'] if Author_Name in Authors else [None]

    @app.get("/{Author_Name}/{poem}")
    def work_of_art(Author_Name: str, poem: str):
        if Author_Name in Authors:
            return {'This poem': Poems[Author_Name]['content'][poem].split("\n")} if poem in Poems[Author_Name]['poem'] else {'This poem': None}
        else:
            return[None]

except Exception:
    print(Exception)

if __name__ == "__main__":
    uvicorn.run(app)
